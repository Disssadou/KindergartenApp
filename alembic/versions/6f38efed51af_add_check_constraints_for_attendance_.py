"""Add check constraints for attendance absence type and reason

Revision ID: 6f38efed51af
Revises: a96e085ee388
Create Date: 2025-05-05 16:43:22.149898

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sys, os

project_root_ = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", ".."))
if project_root_ not in sys.path:
    sys.path.insert(0, project_root_)
try:
    from database.models import AbsenceType
except ImportError:

    print(
        "WARN: Could not import AbsenceType Enum, using hardcoded values in migration."
    )
    absence_type_values = "'sick_leave', 'vacation', 'other'"
else:

    absence_type_values = ", ".join([f"'{at.value}'" for at in AbsenceType])


# revision identifiers, used by Alembic.
revision: str = "6f38efed51af"
down_revision: Union[str, None] = "a96e085ee388"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


check_type_name = "ck_attendance_absence_type"
check_reason_name = "ck_attendance_reason_only_if_absent"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_check_constraint(
        constraint_name=check_type_name,
        table_name="attendances",
        condition=f"absence_type IS NULL OR absence_type IN ({absence_type_values})",
    )
    print(f"Added check constraint: {check_type_name}")

    op.create_check_constraint(
        constraint_name=check_reason_name,
        table_name="attendances",
        condition="(absence_type IS NULL AND absence_reason IS NULL) OR (present = false)",
    )
    print(f"Added check constraint: {check_reason_name}")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_constraint(check_reason_name, "attendances", type_="check")
    print(f"Dropped check constraint: {check_reason_name}")
    op.drop_constraint(check_type_name, "attendances", type_="check")
    print(f"Dropped check constraint: {check_type_name}")

    # ### end Alembic commands ###
